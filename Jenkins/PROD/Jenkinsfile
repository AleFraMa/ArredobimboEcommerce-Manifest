
pipeline {
	agent any
	
	parameters {
        booleanParam(name: 'testonlydeploy', defaultValue: false, description: 'True if you want test only deploy on service with test file')

    }
	
	environment {
	

				
        
		  
	

 
		GITLAB_APP_URL = "https://github.com/Manuel-1996/ArredoBimboE-Commerce.git" 
 

		//GITLAB_CRED = "token_github"
		GITLAB_CRED = "utenza-tecnica-github"
		GITHUB_PROVVISORIA= "utenza-ale-blue"
		GITHUB_MANU='github-manuel-personale'
		
     
			//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
	}
	

	stages {
		stage('Git Pull') {
		 when {
            expression {
                    return !params.testonlydeploy;
                }
        }
			steps {
				dir("app") {
					script {
						git url: "${GITLAB_APP_URL}",credentialsId: "${GITHUB_MANU}"
				}
			}
		}
		}

		stage('Install Dependacy') {
					 when {
            expression {
                    return !params.testonlydeploy;
                }
        }

			steps {
				dir("app"){
				script {
					
					//sh 'echo "export const IP = "https://arredobimbo.com:8443";" > ./src/configs/IPConfig.js'
					sh "echo \"export const IP = 'https://arredobimbo.com:8443';\" > ./src/configs/IPConfig.js"
					sh 'cat ./src/configs/IPConfig.js'
					sh "npm install"
				}
				}
			}
		}
		
		stage('Build Application') {
					 when {
            expression {
                    return !params.testonlydeploy;
                }
        }
			steps {
				dir("app") {
					script {
						sh "echo build"
						sh "CI=false npm run build"
					}
				}
			}
		}
		stage('Remove Old site') {
					 when {
            expression {
                    return !params.testonlydeploy;
                }
        }
			steps {
				dir("app") {
					script {
						sh "echo dafare"
					}
				}
			}
		}

		stage('Deploy On server Alibaba') {
								 when {
            expression {
                    return params.testonlydeploy;
                }
        }
			steps {
				script {
					dir ("app") {
							sh "ls"
							sh "echo prova >> prova.txt"
							 //withCredentials([sshUserPrivateKey(credentialsId: "ssh-key-deploy", keyFileVariable: 'keyfile')]) {

       								//sh "scp -o StrictHostKeyChecking=no -i ${keyfile} -r ./prova.txt root@arredobimbo.com:/root"
        
   								//}
								   sh 'sshpass -p "Arredobimbo2021" scp -o StrictHostKeyChecking=no ./prova.txt root@arredobimbo.com:/root'
							//sh "sudo scp -i /root/Progetti/ArredoBimbo/chiave_privata_server_arredobimbo/key.pem -r ./build/* root@arredobimbo.com:/usr/share/nginx/html"
					}	
				}
			}
		}
		
	
	
		
}

	post {	
		always {
			deleteDir()
		}
	}

}
